/*
 program1.lpp
 COSC 4785
 Colton Roach
 September 5, 2022
*/

%{

using namespace std;

#include "program1.hpp"

%}


%option outfile="program1_lex.cpp"
%option noyywrap
%option yylineno


%%

"=="        {
            type=1;
            return 1;
        }
">"     {
            type=1;
            return 1;
        }
"<"     {
            type=1;
            return 1;
        }
">="        {
            type=1;
            return 1;
        }
"<="        {
            type=1;
            return 1;
        }
"!="        {
            type=1;
            return 1;
        }
"+"     {
            type=3;
            return 1;
        }
"-"     {
            type=3;
            return 1;
        }
"*"     {
            type=3;
            return 1;
        }
"/"     {
            type=3;
            return 1;
        }
"||"        {
            type=2;
            return 1;
        }
"&&"        {
            type=2;
            return 1;
        }
"{"     {
            type=4;
            return 1;
        }
"}"     {
            type=4;
            return 1;
        }
"["     {
            type=4;
            return 1;
        }
"]"     {
            type=4;
            return 1;
        }
"("     {
            type=4;
            return 1;
        }
")"     {
            type=4;
            return 1;
        }
"."     {
            type=5;
            return 1;
        }
","     {
            type=5;
            return 1;
        }
";"     {
            type=5;
            return 1;
        }
"this"      {
            type=6;
            return 1;
        }
"if"        {
            type=6;
            return 1;
        }
"else"      {
            type=6;
            return 1;
        }
"while"     {
            type=6;
            return 1;
        }
[_a-zA-Z][_a-zA-Z0-9]+  {
            type=7;
            return 1;
        }
[0-9]+      {
            type=8;
            return 1;
        }
[0-9]+\.[0-9]+  {
            type=9;
            return 1;
        }
[0-9]+\.[0-9]+[eE][+-]?[0-9]+   {
            type=9;
            return 1;
        }
[0-9]+[Ee][+-]?[0-9]+   {
            type=9;
            return 1;
        }
\n      {
            type=11;
            return 4;
        }
\t      {
            return 3;
        }
" "     {
            return 2;
        }
.       {
            type=10;
            return 1;
        }
    
%%
